(self.webpackChunkcitedrive_docs_com=self.webpackChunkcitedrive_docs_com||[]).push([[7582],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(r),f=i,b=d["".concat(p,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(b,a(a({ref:t},l),{},{components:r})):n.createElement(b,a({ref:t},l))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},499:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var n=r(2122),i=r(9756),o=(r(7294),r(3905)),a=["components"],c={sidebar_position:6,sidebar_label:"chapter"},p={unversionedId:"bibtex/field-types/chapter",id:"bibtex/field-types/chapter",isDocsHomePage:!1,title:"chapter",description:"A chapter, section, or a range of pages of a book is stored numerically in `chapter`.",source:"@site/docs/bibtex/field-types/chapter.md",sourceDirName:"bibtex/field-types",slug:"/bibtex/field-types/chapter",permalink:"/docs/bibtex/field-types/chapter",editUrl:"https://github.com/citedrive/citedrive-docs/tree/main/docs/bibtex/field-types/chapter.md",version:"current",sidebar_label:"chapter",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_label:"chapter"},sidebar:"tutorialSidebar",previous:{title:"email",permalink:"/docs/bibtex/field-types/email"},next:{title:"BibTeX Field types: crossref",permalink:"/docs/bibtex/field-types/crossref"}},s=[],l={toc:s};function u(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A chapter, section, or a range of pages of a book is stored numerically in ",(0,o.kt)("inlineCode",{parentName:"p"},"chapter"),".\nThis BibTeX-field is used for ",(0,o.kt)("inlineCode",{parentName:"p"},"inbook")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"incollection"),". The former is mandatory.\n",(0,o.kt)("inlineCode",{parentName:"p"},"chapter")," is not supported in the entry-type ",(0,o.kt)("inlineCode",{parentName:"p"},"book")," because for the latter, the whole book is intended to be cited."))}u.isMDXComponent=!0}}]);